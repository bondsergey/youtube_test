{"version":3,"sources":["reducer/youtubeList/constant.js","reducer/youtubeList/actions.js","components/Checkbox/index.jsx","components/VideoInfo/index.jsx","components/PrintNumber/index.jsx","components/PrintDate/index.jsx","util/date.js","components/Loader/index.jsx","components/YoutubeTable/index.jsx","util/sort.js","components/Button/index.jsx","App.js","serviceWorker.js","service/index.js","service/YoutubeListService.js","reducer/youtubeList/index.js","reducer/index.js","index.js","boot/createStore.js"],"names":["LOADING_LIST","SUCCESS_LIST","FAILED_LIST","SUCCESS_ADD","FAILED_ADD","loadYoutubeList","dispatch","getState","YoutubeListService","type","loadList","then","payload","catch","removeYotubeList","ids","removeFomList","addYotubeList","addToList","React","memo","value","onChange","label","className","onClick","checked","join","youtubeConfig","theme","modestbranding","controls","autohide","showinfo","showsearch","rel","iv_load_policy","cc_load_policy","stopOpt","width","height","class","playOpt","VideoInfo","id","info","useState","opt","setOpt","changeSize","useCallback","status","url","light","playerVars","onReady","onStart","onPlay","onPause","number","Number","isNaN","toLocaleString","ts","date","Date","getTime","isValidDate","toISOString","replace","dateToSting","Loader","Table","data","isLoading","selected","select","selectAll","sort","setSort","sortinng","field","order","getIconClassName","sortedData","useMemo","array","result","a","b","k","sortObjects","useEffect","length","map","row","key","includes","video","desc","view","like","dislikes","comments","published","children","disabled","App","useDispatch","useSelector","state","youtubeList","setSelected","i","filter","handleDelete","addItem","YoutubeTable","Boolean","window","location","hostname","match","Promise","resolve","setTimeout","Axios","get","response","initialState","error","combineReducers","action","newPaylaod","Math","floor","random","store","createStore","reducer","applyMiddleware","thunk","withExtraArgument","api","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.53fb11f5.chunk.js","sourcesContent":["export const LOADING_LIST = 'youtubeList/loading';\n\nexport const SUCCESS_LIST = 'youtubeList/list-success';\nexport const FAILED_LIST = 'youtubeList/list-failed';\n\nexport const SUCCESS_DELETE = 'youtubeList/delete-success';\nexport const FAILED_DELETE = 'youtubeList/delete-failed';\n\nexport const SUCCESS_ADD = 'youtubeList/add-success';\nexport const FAILED_ADD = 'youtubeList/add-failed';\n","import {\n  LOADING_LIST,\n  FAILED_LIST,\n  SUCCESS_LIST,\n  SUCCESS_DELETE,\n  FAILED_DELETE,\n  SUCCESS_ADD,\n  FAILED_ADD\n} from \"./constant\";\n\nexport const loadYoutubeList = () => (dispatch, getState, {YoutubeListService}) => {\n  dispatch({\n    type: LOADING_LIST\n  });\n\n  return YoutubeListService.loadList().then(payload => {\n    dispatch({\n      type: SUCCESS_LIST,\n      payload\n    })\n  }).catch(payload => {\n    dispatch({\n      type: FAILED_LIST,\n      payload\n    })\n  })\n};\n\nexport const removeYotubeList = (ids) => (dispatch, getState, {YoutubeListService}) => {\n  dispatch({\n    type: LOADING_LIST,\n  });\n\n  return YoutubeListService.removeFomList(ids).then(payload => {\n    dispatch({\n      type: SUCCESS_DELETE,\n      payload\n    })\n  }).catch(payload => {\n    dispatch({\n      type: FAILED_DELETE,\n      payload\n    })\n  });\n};\n\nexport const addYotubeList = () => (dispatch, getState, {YoutubeListService}) => {\n  dispatch({\n    type: LOADING_LIST\n  });\n\n  return YoutubeListService.addToList().then(payload => {\n    dispatch({\n      type: SUCCESS_ADD,\n      payload\n    })\n  }).catch(payload => {\n    dispatch({\n      type: FAILED_ADD,\n      payload\n    })\n  })\n};","import React from \"react\";\nimport \"./style.css\";\n\nfunction Checkbox({value, onChange, label = null, className = \"\"}) {\n  return (\n    <div onClick={onChange}>\n      <input\n        checked={value}\n        className={[\"styled-checkbox\", className].join(\" \")}\n        type=\"checkbox\"\n        onChange={() => {\n        }}\n      />\n      <label>{label}</label>\n    </div>\n  );\n}\n\nexport default React.memo(Checkbox);\n","import React, {useState, useCallback} from \"react\";\nimport \"./style.css\";\nimport ReactPlayer from \"react-player\";\n\nconst youtubeConfig = {\n  theme: \"dark\",\n  modestbranding: 1,\n  controls: 2,\n  autohide: 2,\n  showinfo: 0,\n  showsearch: 0,\n  rel: 1,\n  iv_load_policy: 3,\n  cc_load_policy: 1\n};\n\nconst stopOpt = {\n  width: \"120px\",\n  height: \"60px\",\n  cc_load_policy: 1,\n  class: \"pause\",\n};\n\nconst playOpt = {\n  width: \"320px\",\n  height: \"210px\",\n  class: \"play\"\n};\n\nfunction VideoInfo({id, info}) {\n  const [opt, setOpt] = useState(stopOpt);\n  const changeSize = useCallback(\n    status => {\n      if (status === \"play\") {\n        setOpt(playOpt);\n      } else {\n        setOpt(stopOpt);\n      }\n    },\n    [setOpt]\n  );\n\n  return (\n    <div className={`video-container video-container-${opt && opt.class}`}>\n      <div className=\"player-wrapper\">\n        {opt && (\n          <ReactPlayer\n            className=\"react-player\"\n            url={\"https://www.youtube.com/embed/\" + id}\n            width={opt.width}\n            light={true}\n            height={opt.height}\n            youtubeConfig={{playerVars: youtubeConfig}}\n            onReady={() => changeSize(\"play\")}\n            onStart={() => changeSize(\"play\")}\n            onPlay={() => changeSize(\"play\")}\n            onPause={() => changeSize(\"pause\")}\n          />\n        )}\n      </div>\n      <div className=\"video-info\">\n        <div className=\"video-desc\">{info}</div>\n        <div className=\"video-panel\">\n          <i className=\"fa fa-television\"/>\n          <span className=\"label\">Chanel</span>\n          <i className=\"fa fa-play-circle-o\"/>\n          <i className=\"fa fa-info-circle\"/>\n          <i className=\"fa fa-file-text\"/>\n          <i className=\"fa fa-tag\"/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VideoInfo;\n","import React from \"react\";\n\nfunction PrintNumber({number}) {\n  if (typeof number !== \"number\" && !Number.isNaN(number)) return <i>none</i>;\n\n  return <span>{number.toLocaleString(\"en-EN\")}</span>;\n}\n\nexport default React.memo(PrintNumber);\n","import React from \"react\";\nimport {dateToSting, isValidDate} from \"../../util/date\";\n\nfunction PrintDate({ts = null, className}) {\n  const date = new Date(ts);\n\n  if (!ts || !isValidDate(date)) return <i className={className}>none</i>;\n\n  return <span className={className}>{dateToSting(date)}</span>;\n}\n\nexport default React.memo(PrintDate);\n","export function dateToSting(date) {\n  return date.toISOString().replace(/T.+$/, '')\n}\n\nexport function isValidDate(date) {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Loader() {\n  return (\n    <div className=\"loader\">\n      <div/>\n      <div/>\n      <div/>\n      <div/>\n    </div>\n  );\n}\n\nexport default Loader;\n","import React, {useState, useMemo, useEffect} from \"react\";\nimport Checkbox from \"../Checkbox\";\nimport VideoInfo from \"../VideoInfo\";\nimport PrintNumber from \"../PrintNumber\";\nimport PrintDate from \"../PrintDate\";\nimport {sortObjects} from \"../../util/sort\";\nimport Loader from \"../Loader\";\nimport \"./style.css\";\n\nfunction Table({data, isLoading = false, selected, select, selectAll}) {\n  const [sort, setSort] = useState(null);\n\n  const sortinng = field => {\n    if (sort && sort.field === field) {\n      if (sort.order === \"desc\") {\n        setSort(null);\n        return;\n      }\n      setSort({\n        field,\n        order: \"desc\"\n      });\n    } else {\n      setSort({\n        field,\n        order: \"asc\"\n      });\n    }\n  };\n  const getIconClassName = field => {\n    if (sort && sort.field === field) {\n      return `fa fa-sort-amount-${sort.order}`;\n    }\n    return \"fa fa-sort\";\n  };\n\n  const sortedData = useMemo(() => {\n    return data && sortObjects(data, sort);\n  }, [data, sort]);\n\n  useEffect(() => {\n    setSort(null)\n  }, [data]);\n\n  return (\n    <div className=\"table\">\n      <div className=\"table-header table-row\">\n        <div className=\"header-column column column-min\">\n          Select\n          <i className=\"fa fa-sort-desc\" onClick={selectAll}/>\n        </div>\n        <div\n          className=\"header-column column column-max\"\n          onClick={() => sortinng(\"id\")}\n        >\n          Video\n          <i className={getIconClassName(\"id\")}/>\n        </div>\n        <div className=\"header-column column\" onClick={() => sortinng(\"view\")}>\n          Views\n          <i className={getIconClassName(\"view\")}/>\n        </div>\n        <div className=\"header-column column\" onClick={() => sortinng(\"like\")}>\n          Likes\n          <i className={getIconClassName(\"like\")}/>\n        </div>\n        <div\n          className=\"header-column column\"\n          onClick={() => sortinng(\"dislikes\")}\n        >\n          Dislikes\n          <i className={getIconClassName(\"dislikes\")}/>\n        </div>\n        <div\n          className=\"header-column column\"\n          onClick={() => sortinng(\"comments\")}\n        >\n          Comments\n          <i className={getIconClassName(\"comments\")}/>\n        </div>\n        <div\n          className=\"header-column column\"\n          onClick={() => sortinng(\"published\")}\n        >\n          Published\n          <i className={getIconClassName(\"published\")}/>\n        </div>\n      </div>\n      <div>\n        {isLoading && (\n          <div className=\"table-loader\">\n            <Loader/>\n          </div>\n        )}\n        {sortedData && sortedData.length === 0 && !isLoading && (\n          <div className=\"table-empty\">Nothing to display</div>\n        )}\n        {sortedData &&\n        sortedData.map((row, key) => (\n          <div key={key} className=\"table-body-row table-row\">\n            <div className=\"column column-center column-min\">\n              <Checkbox\n                value={selected.includes(row.id)}\n                onChange={() => {\n                  select(row.id);\n                }}\n              />\n            </div>\n            <div className=\"column column-max video-container \">\n              <VideoInfo id={row.video.id} info={row.video.desc}/>\n            </div>\n            <div className=\"column\">\n              <PrintNumber number={row.view}/>\n            </div>\n            <div className=\"column\">\n              <PrintNumber number={row.like}/>\n            </div>\n            <div className=\"column\">\n              <PrintNumber number={row.dislikes}/>\n            </div>\n            <div className=\"column\">\n              <PrintNumber number={row.comments}/>\n            </div>\n            <div className=\"column\">\n              <PrintDate ts={row.published}/>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Table;\n","export function sortObjects(array, sort = null) {\n  const result = [...array];\n\n  if (!sort) {\n    return result;\n  }\n  const {field, order} = sort;\n\n  result.sort((a, b) => {\n    const k = order === 'asc' ? 1 : -1;\n    if (a[field] > b[field]) return 1 * k;\n\n    if (a[field] < b[field]) return -1 * k;\n\n    return 0;\n  });\n\n  return result;\n}\n","import React from \"react\";\nimport \"./styles.css\";\n\nfunction Button({children, onClick, disabled = false, className = \"\"}) {\n  return (\n    <button\n      className={[\"button\", className].join(\" \")}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default React.memo(Button);\n","import React, {useEffect, useCallback, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {loadYoutubeList, removeYotubeList, addYotubeList} from './reducer/youtubeList/actions';\nimport YoutubeTable from './components/YoutubeTable'\nimport Button from './components/Button'\nimport './App.css';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const {payload, isLoading} = useSelector(state => state.youtubeList);\n  const [selected, setSelected] = useState([]);\n\n  const selectAll = useCallback(() => {\n    if (selected.length === payload.length) {\n      setSelected([]);\n    } else {\n      setSelected(payload.map(i => i.id));\n    }\n  }, [payload, selected]);\n\n  const select = useCallback(id => {\n    if (selected.includes(id)) {\n      setSelected(selected.filter(i => i !== id));\n    } else {\n      setSelected([...selected, id]);\n    }\n  }, [selected]);\n\n  useEffect(() => {\n    dispatch(loadYoutubeList());\n  }, []);\n\n  useEffect(() => {\n    setSelected([]);\n  }, [payload]);\n\n  const handleDelete = useCallback(() => {\n    dispatch(removeYotubeList(selected));\n  }, [dispatch, selected]);\n\n  const addItem = useCallback(id => {\n    dispatch(addYotubeList());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"page-container\">\n        <div className=\"header\">\n          <div className=\"title\">Search Result</div>\n          <div className=\"group-btn-header\">\n            <Button className=\"btn-header\"\n                    disabled={!selected.length || isLoading}\n                    onClick={handleDelete}\n            >\n              Remove selected\n            </Button>\n            <Button className=\"btn-header\" onClick={addItem} disabled={payload && payload.length > 4 || isLoading}>Add\n              to list</Button>\n            <Button className=\"btn-header\">Get links</Button>\n            <Button className=\"btn-header\">Export</Button>\n          </div>\n        </div>\n        <YoutubeTable data={payload} isLoading={isLoading} selectAll={selectAll} select={select} selected={selected}/>\n        {(!isLoading && payload) && <div className=\"footer\"><Button>Load more</Button></div>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import YoutubeListService from './YoutubeListService';\n\nexport default {\n  YoutubeListService,\n}\n","import Axios from \"axios\";\n\nexport default {\n  async loadList() {\n    await new Promise(resolve => setTimeout(resolve, 1000)); // sleep for display loading\n    return Axios.get('/mock/list.json').then(response => response.data);\n  },\n  removeFomList(ids) {\n    return new Promise(resolve => setTimeout(resolve, 1000, ids)); // request mock\n  },\n  async addToList() {\n    await new Promise(resolve => setTimeout(resolve, 1000)); // sleep for display loading\n    return Axios.get('/mock/add_list.json').then(response => response.data);\n  }\n}","import {\n  LOADING_LIST,\n  FAILED_LIST,\n  SUCCESS_LIST,\n  SUCCESS_DELETE,\n  FAILED_DELETE,\n  SUCCESS_ADD,\n  FAILED_ADD\n} from \"./constant\";\n\nconst initialState = {\n  error: null,\n  isLoading: false,\n  payload: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOADING_LIST: {\n      return {...state, error: null, isLoading: true};\n    }\n    case FAILED_LIST: {\n      return {...state, payload: null, error: action.payload, isLoading: false};\n    }\n    case SUCCESS_LIST: {\n      return {...state, payload: action.payload, error: null, isLoading: false};\n    }\n    case SUCCESS_DELETE: {\n      const newPaylaod = state.payload.filter(({id}) => !action.payload.includes(id))\n      return {...state, payload: newPaylaod, error: null, isLoading: false};\n    }\n    case FAILED_DELETE: {\n      return {...state, error: action.payload, isLoading: false};\n    }\n    case SUCCESS_ADD: {\n      return {\n        ...state,\n        payload: [...state.payload, {...action.payload, id: Math.floor(Math.random() * 10000)}],\n        error: null,\n        isLoading: false\n      };\n    }\n    case FAILED_ADD: {\n      return {...state, error: action.payload, isLoading: false};\n    }\n    default:\n      return state\n  }\n}\n","import youtubeList from './youtubeList';\nimport {combineReducers} from 'redux';\n\nexport default combineReducers({\n  youtubeList,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport createStore from './boot/createStore';\nimport './index.css';\n\nconst store = createStore();\n\nReactDOM.render(<Provider store={store}>\n  <App/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import api from '../service';\nimport reducer from '../reducer';\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk'\n\nexport default function () {\n  const store = createStore(\n    reducer,\n    applyMiddleware(thunk.withExtraArgument(api))\n  );\n\n  return store;\n}\n"],"sourceRoot":""}